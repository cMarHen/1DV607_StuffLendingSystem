^0 CheckStyle Issues in C:/Users/marti/LNU-WP/1dv607/a2/app/src/main/java/controller/App.java
i0 CheckStyle Issues in C:/Users/marti/LNU-WP/1dv607/a2/app/src/main/java/controller/MainController.java
o0 CheckStyle Issues in C:/Users/marti/LNU-WP/1dv607/a2/app/src/main/java/model/domain/ContractCollection.java
s0 CheckStyle Issues in C:/Users/marti/LNU-WP/1dv607/a2/app/src/main/java/model/domain/ContractCollectionImpl.java
a0 CheckStyle Issues in C:/Users/marti/LNU-WP/1dv607/a2/app/src/main/java/model/domain/Item.java
k0 CheckStyle Issues in C:/Users/marti/LNU-WP/1dv607/a2/app/src/main/java/model/domain/ItemCollection.java
o0 CheckStyle Issues in C:/Users/marti/LNU-WP/1dv607/a2/app/src/main/java/model/domain/ItemCollectionImpl.java
i0 CheckStyle Issues in C:/Users/marti/LNU-WP/1dv607/a2/app/src/main/java/model/domain/ItemIterator.java
l0 CheckStyle Issues in C:/Users/marti/LNU-WP/1dv607/a2/app/src/main/java/model/domain/LendingContract.java
c0 CheckStyle Issues in C:/Users/marti/LNU-WP/1dv607/a2/app/src/main/java/model/domain/Member.java
m0 CheckStyle Issues in C:/Users/marti/LNU-WP/1dv607/a2/app/src/main/java/model/domain/MemberCollection.java
n0 CheckStyle Issues in C:/Users/marti/LNU-WP/1dv607/a2/app/src/main/java/model/domain/OwnerIteratorImpl.java
i0 CheckStyle Issues in C:/Users/marti/LNU-WP/1dv607/a2/app/src/main/java/model/domain/RandomString.java
o0 CheckStyle Issues in C:/Users/marti/LNU-WP/1dv607/a2/app/src/main/java/model/domain/StuffLendingSystem.java
m0 CheckStyle Issues in C:/Users/marti/LNU-WP/1dv607/a2/app/src/main/java/model/domain/TypeIteratorImpl.java
k0 CheckStyle Issues in C:/Users/marti/LNU-WP/1dv607/a2/app/src/main/java/model/repository/ItemMapper.java
g0 CheckStyle Issues in C:/Users/marti/LNU-WP/1dv607/a2/app/src/main/java/model/repository/Mapper.java
n0 CheckStyle Issues in C:/Users/marti/LNU-WP/1dv607/a2/app/src/main/java/model/repository/MapperFactory.java
m0 CheckStyle Issues in C:/Users/marti/LNU-WP/1dv607/a2/app/src/main/java/model/repository/MemberMapper.java
q0 CheckStyle Issues in C:/Users/marti/LNU-WP/1dv607/a2/app/src/main/java/model/repository/mock/ItemMockOne.java
q0 CheckStyle Issues in C:/Users/marti/LNU-WP/1dv607/a2/app/src/main/java/model/repository/mock/ItemMockTwo.java
s0 CheckStyle Issues in C:/Users/marti/LNU-WP/1dv607/a2/app/src/main/java/model/repository/mock/MemberMockOne.java
s0 CheckStyle Issues in C:/Users/marti/LNU-WP/1dv607/a2/app/src/main/java/model/repository/mock/MemberMockTwo.java
j0 CheckStyle Issues in C:/Users/marti/LNU-WP/1dv607/a2/app/src/main/java/model/repository/mock/Mock.java
t0 CheckStyle Issues in C:/Users/marti/LNU-WP/1dv607/a2/app/src/main/java/model/repository/mock/MockCollection.java
q0 CheckStyle Issues in C:/Users/marti/LNU-WP/1dv607/a2/app/src/main/java/model/repository/ObjectIdentifier.java
r0 CheckStyle Issues in C:/Users/marti/LNU-WP/1dv607/a2/app/src/main/java/model/repository/PersistenceFacade.java
r0 CheckStyle Issues in C:/Users/marti/LNU-WP/1dv607/a2/app/src/main/java/model/repository/PersistenceMapper.java
]13 CheckStyle Issues in C:/Users/marti/LNU-WP/1dv607/a2/app/src/main/java/view/Console.java
 text:line: 6 column: column:1 
?Extra separation in import group before 'java.util.ArrayList'

!text:line: 10 column: column:1 
=Extra separation in import group before 'model.domain.Item'

text:line: 385 column: 
1Line is longer than 120 characters (found 172).

text:line: 388 column: 
1Line is longer than 120 characters (found 121).

text:line: 391 column: 
1Line is longer than 120 characters (found 125).

text:line: 392 column: 
1Line is longer than 120 characters (found 128).

text:line: 393 column: 
1Line is longer than 120 characters (found 185).

text:line: 396 column: 
1Line is longer than 120 characters (found 121).

text:line: 404 column: 
1Line is longer than 120 characters (found 223).

text:line: 409 column: 
1Line is longer than 120 characters (found 122).

text:line: 417 column: 
1Line is longer than 120 characters (found 223).

"text:line: 427 column: column:3 
Missing a Javadoc comment.

"text:line: 449 column: column:3 
Missing a Javadoc comment.

(0 FindBugs Issues in view/Console.java
-3 FindBugs Issues in model/domain/Item.java
text:lines: 35-157 
HgetOwner() may expose internal representation by returning Item.owner 
NMay expose internal representation by returning reference to mutable object 
cReturning a reference to a mutable object value stored in one of the object's fields exposes the 
f  internal representation of the object. If instances are accessed by untrusted code, and unchecked 
d  changes to the mutable object would compromise security or other important properties, you will 
b  need to do something different. Returning a new copy of the object is better approach in many 
  situations.

text:lines: 35-157 
dnew model.domain.Item(Member$Mutable, Item$ItemType, String, String, String, int, int) may expose 
T  internal representation by storing an externally mutable object into Item.owner 
RMay expose internal representation by incorporating reference to mutable object 
gThis code stores a reference to an externally mutable object into the internal representation of the 
e  object. If instances are accessed by untrusted code, and unchecked changes to the mutable object 
f  would compromise security or other important properties, you will need to do something different. 
G  Storing a copy of the object is better approach in many situations.

text:lines: 35-157 
fnew model.domain.Item(Member$Mutable, Item$ItemType, String, String, String, int, int, boolean) may 
[  expose internal representation by storing an externally mutable object into Item.owner 
RMay expose internal representation by incorporating reference to mutable object 
gThis code stores a reference to an externally mutable object into the internal representation of the 
e  object. If instances are accessed by untrusted code, and unchecked changes to the mutable object 
f  would compromise security or other important properties, you will need to do something different. 
G  Storing a copy of the object is better approach in many situations.

91 FindBugs Issues in model/domain/MemberCollection.java
text:lines: 9-74 
XgetMembers() may expose internal representation by returning MemberCollection.members 
NMay expose internal representation by returning reference to mutable object 
cReturning a reference to a mutable object value stored in one of the object's fields exposes the 
f  internal representation of the object. If instances are accessed by untrusted code, and unchecked 
d  changes to the mutable object would compromise security or other important properties, you will 
b  need to do something different. Returning a new copy of the object is better approach in many 
  situations.

=0 FindBugs Issues in model/repository/mock/ItemMockOne.java
81 FindBugs Issues in model/domain/LendingContract.java
text:lines: 7-77 
[model.domain.LendingContract defines compareTo(LendingContract) and uses Object.equals() 
8Class defines compareTo(...) and uses Object.equals() 
eThis class defines a compareTo(...) method but inherits its equals() method from java.lang.Object. 
e  Generally, the value of compareTo should return zero if and only if equals returns true. If this 
g  is violated, weird and unpredictable failures will occur in classes such as PriorityQueue. In Java 
d  5 the PriorityQueue.remove method uses the compareTo method, while in Java 6 it uses the equals 
  method. 
 
eFrom the JavaDoc for the compareTo method in the Comparable interface: It is strongly recommended, 
g  but not strictly required that (x.compareTo(y)==0) == (x.equals(y)). Generally speaking, any class 
f  that implements the Comparable interface and violates this condition should clearly indicate this 
d  fact. The recommended language is "Note: this class has a natural ordering that is inconsistent 
  with equals."

?0 FindBugs Issues in model/domain/ContractCollectionImpl.java
50 FindBugs Issues in model/domain/ItemIterator.java
*0 FindBugs Issues in controller/App.java
?0 FindBugs Issues in model/repository/mock/MemberMockOne.java
90 FindBugs Issues in model/repository/MemberMapper.java
:0 FindBugs Issues in model/repository/MapperFactory.java
?0 FindBugs Issues in model/repository/mock/MemberMockTwo.java
=0 FindBugs Issues in model/repository/ObjectIdentifier.java
70 FindBugs Issues in model/domain/ItemCollection.java
50 FindBugs Issues in model/domain/RandomString.java
;0 FindBugs Issues in model/domain/StuffLendingSystem.java
30 FindBugs Issues in model/repository/Mapper.java
>0 FindBugs Issues in model/repository/PersistenceMapper.java
50 FindBugs Issues in controller/MainController.java
;1 FindBugs Issues in model/domain/ItemCollectionImpl.java
text:lines: 17-82 
YgetAllItems() may expose internal representation by returning ItemCollectionImpl.items 
NMay expose internal representation by returning reference to mutable object 
cReturning a reference to a mutable object value stored in one of the object's fields exposes the 
f  internal representation of the object. If instances are accessed by untrusted code, and unchecked 
d  changes to the mutable object would compromise security or other important properties, you will 
b  need to do something different. Returning a new copy of the object is better approach in many 
  situations.

91 FindBugs Issues in model/domain/TypeIteratorImpl.java
text:lines: 22-48 
dnew model.domain.TypeIteratorImpl(Item$ItemType, ArrayList) may expose internal representation by 
E  storing an externally mutable object into TypeIteratorImpl.items 
RMay expose internal representation by incorporating reference to mutable object 
gThis code stores a reference to an externally mutable object into the internal representation of the 
e  object. If instances are accessed by untrusted code, and unchecked changes to the mutable object 
f  would compromise security or other important properties, you will need to do something different. 
G  Storing a copy of the object is better approach in many situations.

60 FindBugs Issues in model/repository/mock/Mock.java
>3 FindBugs Issues in model/repository/PersistenceFacade.java
text:lines: 18-45 
UgetItems() may expose internal representation by returning PersistenceFacade.items 
NMay expose internal representation by returning reference to mutable object 
cReturning a reference to a mutable object value stored in one of the object's fields exposes the 
f  internal representation of the object. If instances are accessed by untrusted code, and unchecked 
d  changes to the mutable object would compromise security or other important properties, you will 
b  need to do something different. Returning a new copy of the object is better approach in many 
  situations.

text:lines: 18-45 
YgetMembers() may expose internal representation by returning PersistenceFacade.members 
NMay expose internal representation by returning reference to mutable object 
cReturning a reference to a mutable object value stored in one of the object's fields exposes the 
f  internal representation of the object. If instances are accessed by untrusted code, and unchecked 
d  changes to the mutable object would compromise security or other important properties, you will 
b  need to do something different. Returning a new copy of the object is better approach in many 
  situations.

text:lines: 18-45 
Unread field: mapperFactory 
Unread field 
@This field is never read. Consider removing it from the class.

/0 FindBugs Issues in model/domain/Member.java
@0 FindBugs Issues in model/repository/mock/MockCollection.java
71 FindBugs Issues in model/repository/ItemMapper.java
text:lines: 16-57 
enew model.repository.ItemMapper(MemberCollection) may expose internal representation by storing an 
6  externally mutable object into ItemMapper.members 
RMay expose internal representation by incorporating reference to mutable object 
gThis code stores a reference to an externally mutable object into the internal representation of the 
e  object. If instances are accessed by untrusted code, and unchecked changes to the mutable object 
f  would compromise security or other important properties, you will need to do something different. 
G  Storing a copy of the object is better approach in many situations.

=0 FindBugs Issues in model/repository/mock/ItemMockTwo.java
;0 FindBugs Issues in model/domain/ContractCollection.java
:1 FindBugs Issues in model/domain/OwnerIteratorImpl.java
text:lines: 21-47 
fnew model.domain.OwnerIteratorImpl(Member, ArrayList) may expose internal representation by storing 
>  an externally mutable object into OwnerIteratorImpl.items 
RMay expose internal representation by incorporating reference to mutable object 
gThis code stores a reference to an externally mutable object into the internal representation of the 
e  object. If instances are accessed by untrusted code, and unchecked changes to the mutable object 
f  would compromise security or other important properties, you will need to do something different. 
G  Storing a copy of the object is better approach in many situations.

